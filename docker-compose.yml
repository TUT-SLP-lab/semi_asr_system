version: "3"
services:
    asr_system:
        build:
            context: .
            dockerfile: docker/asr_system/Dockerfile
        restart: always
        env_file:
            - .env
        environment:
            - NVIDIA_VISIBLE_DEVICES=all
            - DISPATCHER_IP=dispatcher
        ports:
            - "5000:5000"
        command: "python -u src/run_asr_server.py"
        volumes:
            - ./src:/app/src
            - ./test:/app/test
            - ./docker/data/text:${TEXT_OUTPUT}
            - ./docker/data/models:${MODEL_DIR}
            - ./docker/data/wav_data:${WAV_DIR}
            - ./docker/data/split_wav:${SPLIT_WAV}
            
    mongo:
        image: mongo
        restart: always
        environment:
          MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
          MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
        ports:
          - ${MONGO_DB_PORT}:${MONGO_DB_PORT}
        volumes:
          - ./db:/data/db
          - ./configdb:/data/configdb

    mongo-express:
      image: mongo-express
      restart: always
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USERNAME}
        ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
        ME_CONFIG_MONGODB_SERVER: ${MONGO_DB_SERVER}
      depends_on:
        - mongo

    dispatcher:
      container_name: dispatcher
      restart: always
      build:
        context: .
        dockerfile: docker/dispatcher/Dockerfile
      ports:
        - ${DISPATCHER_PORT}:${DISPATCHER_PORT}
      environment:
        - MONGO_DB_SERVER
        - MONGO_DB_PORT
        - MONGO_DB_USERNAME
        - MONGO_DB_PASSWORD
        - MONGO_DB_NAME
        - MONGO_COLLECTION_NAME
        - RECORDER_PORT
        - ASR_SYSTEM_IP
        - ASR_SYSTEM_PORT
        - DISPATCHER_PORT

      command: "python3 -u dispatcher.py"
      volumes:
        - ./src/dispatcher:/app
